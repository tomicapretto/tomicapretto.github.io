knitr::opts_chunk$set(fig.align = "center", out.width = "95%")
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
knitr::opts_chunk$set(fig.align = "center", out.width = "95%")
knitr::opts_chunk$set(message = FALSE, warning = FALSE)
library(ggplot2)
library(reticulate)
use_condaenv("bmb", required = TRUE)
BLUE = "#003f5c"
PURPLE = "#7a5195"
PINK = "#ef5675"
reticulate::repl_python()
df = data.frame(x = py$x, y = py$y)
model = lm(y ~ x, data = df)
y_pred = predict(model, df = df)
error = y_pred - df$y
error_total = sum(error ^ 2)
df_squares = data.frame(
xmin = df$x,
xmax = df$x + abs(error),
ymin = ifelse(df$y < y_pred, df$y, df$y - abs(error)),
ymax = ifelse(df$y < y_pred, df$y + abs(error), df$y)
)
xend = df$x + error * c(0, 1, 0, 1)
yend = (df_squares$ymin + df_squares$ymax) / 2
df_arrows = data.frame(
x = xend + c(-0.2, 0.3, -0.3, 0.2),
y = yend + c(0.2, -0.3, 0.3, -0.2),
xend = xend,
yend = yend,
y_label = yend + c(0.3, -0.4, 0.4, -0.3),
label = round(error ^ 2, 4)
)
ggplot(df) +
geom_rect(
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
data = df_squares,
fill = BLUE,
alpha = 0.5,
color = "grey10"
) +
geom_point(aes(x, y), size = 3, shape=21, fill=PURPLE, color="black") +
geom_line(
aes(x, y),
size = 1,
color = "grey20",
data = data.frame(x = df$x, y = y_pred)
) +
geom_curve(
aes(x = x, y = y, xend = xend, yend = yend),
df_arrows,
arrow = arrow(length = unit(0.1, "cm"), type = "closed")
) +
geom_text(
aes(x = x, y = y_label, label = label),
df_arrows
) +
lims(
x = c(0.8, 5.8),
y = c(0.8, 5.8)
) +
labs(
title = sprintf("Sum of squares: %s", round(error_total, 4))
)
reticulate::repl_python()
df = data.frame(x = py$x, y = py$y)
model = lm(y ~ x, data = df)
y_pred = predict(model, df = df)
error = y_pred - df$y
error_total = sum(error ^ 2)
df_squares = data.frame(
xmin = df$x,
xmax = df$x + abs(error),
ymin = ifelse(df$y < y_pred, df$y, df$y - abs(error)),
ymax = ifelse(df$y < y_pred, df$y + abs(error), df$y)
)
xend = df$x + error * c(0, 1, 0, 1)
yend = (df_squares$ymin + df_squares$ymax) / 2
df_arrows = data.frame(
x = xend + c(-0.2, 0.3, -0.3, 0.2),
y = yend + c(0.2, -0.3, 0.3, -0.2),
xend = xend,
yend = yend,
y_label = yend + c(0.3, -0.4, 0.4, -0.3),
label = round(error ^ 2, 4)
)
ggplot(df) +
geom_rect(
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
data = df_squares,
fill = BLUE,
alpha = 0.5,
color = "grey10"
) +
geom_point(aes(x, y), size = 3, shape=21, fill=PURPLE, color="black") +
geom_line(
aes(x, y),
size = 1,
color = "grey20",
data = data.frame(x = df$x, y = y_pred)
) +
geom_curve(
aes(x = x, y = y, xend = xend, yend = yend),
df_arrows,
arrow = arrow(length = unit(0.1, "cm"), type = "closed")
) +
geom_text(
aes(x = x, y = y_label, label = label),
df_arrows
) +
lims(
x = c(0.8, 5.8),
y = c(0.8, 5.8)
) +
labs(
title = sprintf("Sum of squares: %s", round(error_total, 4))
)
reticulate::repl_python()
df = data.frame(x = py$x, y = py$y)
model = lm(y ~ x, data = df)
y_pred = predict(model, df = df)
error = y_pred - df$y
error_total = sum(error ^ 2)
df_squares = data.frame(
xmin = df$x,
xmax = df$x + abs(error),
ymin = ifelse(df$y < y_pred, df$y, df$y - abs(error)),
ymax = ifelse(df$y < y_pred, df$y + abs(error), df$y)
)
xend = df$x + abs(error) * c(0, 1, 0, 1, 1)
yend = (df_squares$ymin + df_squares$ymax) / 2
df_arrows = data.frame(
x = xend + c(-0.2, 0.3, -0.3, 0.3, 0.2),
y = yend + c(0.2, -0.3, 0.3, -0.3, -0.2),
xend = xend,
yend = yend,
y_label = yend + c(0.3, -0.4, 0.4, -0.4, -0.3),
label = round(error ^ 2, 4)
)
ggplot(df) +
geom_rect(
aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
data = df_squares,
fill = BLUE,
alpha = 0.5,
color = "grey10"
) +
geom_point(aes(x, y), size = 3, shape=21, fill=PURPLE, color="black") +
geom_line(
aes(x, y),
size = 1,
color = "grey20",
data = data.frame(x = df$x, y = y_pred)
) +
geom_curve(
aes(x = x, y = y, xend = xend, yend = yend),
df_arrows,
arrow = arrow(length = unit(0.1, "cm"), type = "closed")
) +
geom_text(
aes(x = x, y = y_label, label = label),
df_arrows
) +
lims(
x = c(0.8, 5.8),
y = c(0.8, 5.8)
) +
labs(
title = sprintf("Sum of squares: %s", round(error_total, 4))
)
reticulate::repl_python()
ggplot(py$data) +
geom_abline(
aes(intercept=a, slope=b),
data = data.frame(a = py$a, b = py$b),
color = "gray30",
alpha = 0.1
) +
geom_abline(
intercept = py$true_intercept,
slope = py$true_slope,
size = 1.2,
color = "black"
) +
geom_point(aes(x, y), shape=21, fill=PURPLE, color="black", size = 2.2)
reticulate::repl_python()
df = data.frame(
x = py$x,
y_normal = py$y_normal,
y_t = py$y_t
)
df_long = tidyr::pivot_longer(df, cols = c(y_normal, y_t))
df_arrows = data.frame(
x = c(-3, 3),
y = c(0.36, 0.31),
xend = c(py$x[93], py$x[105]),
yend = c(py$y_normal[93], py$y_t[105]),
y_label = c(0.37, 0.30),
label = c("Normal", "Student-T")
)
ggplot(df_long) +
geom_line(aes(x, value, color = name), size = 1) +
geom_curve(
aes(x = x, y = y, xend = xend, yend = yend),
df_arrows,
arrow = arrow(length = unit(0.1, "cm"), type = "closed")
) +
geom_text(
aes(x = x, y = y_label, label = label),
df_arrows,
size = 5
) +
scale_color_manual(values = c(BLUE, PINK)) +
theme(legend.position = "none")
reticulate::repl_python()
a_mean = mean(py$a)
b_mean = mean(py$b)
ggplot(py$data) +
geom_abline(
aes(intercept=a, slope=b),
data = data.frame(a = py$a, b = py$b),
color = "gray30",
alpha = 0.1
) +
geom_abline(
intercept = py$true_intercept,
slope = py$true_slope,
size = 1.2,
color = "black"
) +
geom_point(aes(x, y), shape = 21, fill = PURPLE, color = "black", size = 2.2)
render_site()
render_site()
render_site()
render_site()
render_site()
library(betareg)
library(ggplot2)
library(patchwork)
library(reticulate)
use_condaenv("bmb", required = TRUE)
BLUE = "#003f5c"
PURPLE = "#7a5195"
PINK = "#ef5675"
data("GasolineYield", package = "betareg")
reticulate::repl_python()
ggplot(py$data) +
geom_point(aes(x, y), shape = 21, fill = PURPLE, color = "black", size = 2.2)
reticulate::repl_python()
posterior_df = tidyr::pivot_longer(
py$posterior_df,
cols = c("β_0", "β_1", "σ", "ν")
)
plt1 = ggplot(posterior_df) +
geom_histogram(
aes(value, fill = chain),
position = "identity",
alpha = 0.6,
bins = 40
) +
scale_fill_manual(values = c(PURPLE, BLUE)) +
facet_wrap(
vars(name),
nrow = 4,
scales = "free",
strip.position = "top"
)  +
theme(
legend.position = "none",
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()
)
plt2 = ggplot(posterior_df) +
geom_line(
aes(draw, value, color = chain), alpha = 0.6
) +
scale_color_manual(values = c(PURPLE, BLUE)) +
facet_wrap(
vars(name),
nrow = 4,
scales = "free",
strip.position = "top"
)  +
theme(
legend.position = "none",
axis.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()
)
plt1 + plt2
ggplot(py$data) +
geom_abline(
aes(intercept = a, slope = b),
data = data.frame(a = py$a, b = py$b),
color = "gray30",
alpha = 0.1
) +
geom_abline(
intercept = py$true_intercept,
slope = py$true_slope,
size = 1.2,
color = "black"
) +
geom_point(aes(x, y), shape = 21, fill = PURPLE, color = "black", size = 2.2)
reticulate::repl_python()
